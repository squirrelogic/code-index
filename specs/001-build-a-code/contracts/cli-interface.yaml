# CLI Interface Contract: Code-Index
# OpenAPI-style specification for CLI commands and their interfaces

openapi: 3.0.0
info:
  title: Code-Index CLI Interface
  version: 1.0.0
  description: Command-line interface specification for code-index tool

paths:
  /init:
    post:
      summary: Initialize code-index in current project
      operationId: init
      description: |
        Creates .codeindex/ directory with SQLite database and logs,
        .claude/ directory with settings, and .mcp.json configuration file.
        Operation is idempotent.
      parameters:
        - name: force
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Reinitialize even if already set up
        - name: json
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Output result as JSON
      responses:
        '0':
          description: Success
          content:
            text/plain:
              example: "✓ Initialized code-index in /path/to/project"
            application/json:
              schema:
                $ref: '#/components/schemas/InitResult'
        '1':
          description: Error
          content:
            text/plain:
              example: "Error: Permission denied creating .codeindex directory"

  /index:
    post:
      summary: Index all project files
      operationId: index
      description: |
        Scans all project files (respecting .gitignore patterns),
        extracts metadata, and stores in SQLite database.
      parameters:
        - name: json
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Output result as JSON
        - name: verbose
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Show detailed progress
      responses:
        '0':
          description: Success
          content:
            text/plain:
              example: "✓ Indexed 1,234 files in 1.2s"
            application/json:
              schema:
                $ref: '#/components/schemas/IndexResult'
        '1':
          description: Error

  /search:
    get:
      summary: Search indexed codebase
      operationId: search
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search query (text or pattern)
        - name: regex
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Treat query as regular expression
        - name: case-sensitive
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Case-sensitive search
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 1000
          description: Maximum number of results
        - name: json
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Output results as JSON
      responses:
        '0':
          description: Success
          content:
            text/plain:
              example: |
                src/index.ts:42: function searchFiles(query: string) {
                src/search.ts:15: const results = searchIndex(query);
                Found 2 matches in 2 files
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
        '1':
          description: Error
        '2':
          description: No index found (run 'code-index index' first)

  /refresh:
    post:
      summary: Refresh index with recent changes
      operationId: refresh
      description: |
        Detects modified files since last index and updates only
        those entries for fast incremental updates.
      parameters:
        - name: json
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Output result as JSON
      responses:
        '0':
          description: Success
          content:
            text/plain:
              example: "✓ Refreshed 23 files in 0.3s"
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResult'
        '1':
          description: Error

  /doctor:
    get:
      summary: Check system health and configuration
      operationId: doctor
      description: |
        Checks database integrity, file permissions, configuration validity,
        and reports any issues with suggested fixes.
      parameters:
        - name: json
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Output result as JSON
        - name: fix
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Attempt to fix issues automatically
      responses:
        '0':
          description: All checks passed
          content:
            text/plain:
              example: |
                ✓ Database: healthy (1.2 MB)
                ✓ Configuration: valid
                ✓ File permissions: OK
                All systems operational
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResult'
        '1':
          description: Issues detected
        '2':
          description: Critical error

  /uninstall:
    delete:
      summary: Remove all code-index files from project
      operationId: uninstall
      description: |
        Removes .codeindex/ and .claude/ directories and all configurations,
        leaving the project in a clean state.
      parameters:
        - name: yes
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Skip confirmation prompt
        - name: json
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Output result as JSON
      responses:
        '0':
          description: Success
          content:
            text/plain:
              example: "✓ Removed all code-index files"
            application/json:
              schema:
                $ref: '#/components/schemas/UninstallResult'
        '1':
          description: Error or cancelled

  /help:
    get:
      summary: Display help information
      operationId: help
      description: Shows usage information and available commands
      parameters:
        - name: command
          in: query
          required: false
          schema:
            type: string
            enum: [init, index, search, refresh, doctor, uninstall]
          description: Show help for specific command
      responses:
        '0':
          description: Help displayed
          content:
            text/plain:
              example: |
                code-index - Local codebase indexing and search tool

                Usage: code-index <command> [options]

                Commands:
                  init       Initialize code-index in current project
                  index      Index all project files
                  search     Search indexed codebase
                  refresh    Refresh index with recent changes
                  doctor     Check system health
                  uninstall  Remove all code-index files

                Run 'code-index <command> --help' for command details

  /version:
    get:
      summary: Display version information
      operationId: version
      responses:
        '0':
          description: Version displayed
          content:
            text/plain:
              example: "code-index version 1.0.0"

components:
  schemas:
    InitResult:
      type: object
      required:
        - success
        - message
        - paths
      properties:
        success:
          type: boolean
        message:
          type: string
        paths:
          type: object
          properties:
            codeindex:
              type: string
              description: Path to .codeindex directory
            claude:
              type: string
              description: Path to .claude directory
            mcp:
              type: string
              description: Path to .mcp.json file
        alreadyInitialized:
          type: boolean

    IndexResult:
      type: object
      required:
        - success
        - filesIndexed
        - duration
      properties:
        success:
          type: boolean
        filesIndexed:
          type: integer
        filesIgnored:
          type: integer
        totalSize:
          type: integer
          description: Total size of indexed files in bytes
        duration:
          type: number
          description: Time taken in seconds
        errors:
          type: array
          items:
            type: object
            properties:
              file:
                type: string
              error:
                type: string

    SearchResults:
      type: object
      required:
        - query
        - matches
        - fileCount
      properties:
        query:
          type: string
        queryType:
          type: string
          enum: [text, regex, symbol, file]
        matches:
          type: array
          items:
            type: object
            properties:
              file:
                type: string
              line:
                type: integer
              column:
                type: integer
              match:
                type: string
              context:
                type: string
              score:
                type: number
        fileCount:
          type: integer
        totalMatches:
          type: integer
        truncated:
          type: boolean

    RefreshResult:
      type: object
      required:
        - success
        - filesUpdated
        - filesAdded
        - filesRemoved
        - duration
      properties:
        success:
          type: boolean
        filesUpdated:
          type: integer
        filesAdded:
          type: integer
        filesRemoved:
          type: integer
        duration:
          type: number
        errors:
          type: array
          items:
            type: object
            properties:
              file:
                type: string
              error:
                type: string

    HealthCheckResult:
      type: object
      required:
        - healthy
        - components
      properties:
        healthy:
          type: boolean
        components:
          type: object
          properties:
            database:
              $ref: '#/components/schemas/ComponentStatus'
            filesystem:
              $ref: '#/components/schemas/ComponentStatus'
            configuration:
              $ref: '#/components/schemas/ComponentStatus'
        statistics:
          type: object
          properties:
            totalFiles:
              type: integer
            totalSize:
              type: integer
            databaseSize:
              type: integer
            lastIndexed:
              type: string
              format: date-time
        issues:
          type: array
          items:
            type: object
            properties:
              severity:
                type: string
                enum: [low, medium, high, critical]
              component:
                type: string
              description:
                type: string
              suggestion:
                type: string

    ComponentStatus:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum: [healthy, warning, error]
        message:
          type: string
        details:
          type: object

    UninstallResult:
      type: object
      required:
        - success
        - message
      properties:
        success:
          type: boolean
        message:
          type: string
        removedPaths:
          type: array
          items:
            type: string