openapi: 3.0.0
info:
  title: Claude Code Hook Interface Contract
  version: 1.0.0
  description: Defines the interface between Claude Code and hook scripts

paths:
  /hooks/pre-tool-use:
    post:
      summary: PreToolUse Hook
      operationId: preToolUse
      description: |
        Executes before any tool operation in Claude Code.
        Can enforce policies and block tool execution.
      requestBody:
        description: Hook event data passed via stdin
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreToolUseEvent'
      responses:
        '0':
          description: Allow tool execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreToolUseResponse'
            text/plain:
              schema:
                type: string
                description: Optional stdout output (logged)
        '2':
          description: Block tool execution
          content:
            text/plain:
              schema:
                type: string
                description: Error message shown to Claude
                example: "BLOCKED: Command contains sudo"

  /hooks/post-tool-use:
    post:
      summary: PostToolUse Hook
      operationId: postToolUse
      description: |
        Executes after file-modifying operations.
        Triggers incremental index refresh.
      requestBody:
        description: Hook event data passed via stdin
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostToolUseEvent'
      responses:
        '0':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: Optional output (logged)
                example: "Index refreshed for 3 files"
        '2':
          description: Error occurred (non-blocking)
          content:
            text/plain:
              schema:
                type: string
                description: Error message shown to Claude

  /hooks/session-start:
    post:
      summary: SessionStart Hook
      operationId: sessionStart
      description: |
        Executes when Claude Code session starts.
        Warms caches and checks system health.
      requestBody:
        description: Hook event data passed via stdin
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionStartEvent'
      responses:
        '0':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: Output added as context to Claude
                example: |
                  Project: code-index
                  Index: 1,234 files indexed
                  Health: All systems operational
            application/json:
              schema:
                $ref: '#/components/schemas/SessionStartResponse'

components:
  schemas:
    PreToolUseEvent:
      allOf:
        - $ref: '#/components/schemas/BaseHookEvent'
        - type: object
          required:
            - tool_name
            - tool_input
          properties:
            tool_name:
              type: string
              description: Name of tool being invoked
              example: "Bash"
            tool_input:
              type: object
              description: Tool parameters
              examples:
                bash:
                  value:
                    command: "npm install"
                    description: "Install dependencies"
                write:
                  value:
                    file_path: "/path/to/file.txt"
                    content: "File content"

    PostToolUseEvent:
      allOf:
        - $ref: '#/components/schemas/BaseHookEvent'
        - type: object
          required:
            - tool_name
            - tool_input
            - tool_response
          properties:
            tool_name:
              type: string
              description: Name of tool that was invoked
            tool_input:
              type: object
              description: Tool parameters that were used
            tool_response:
              type: object
              description: Result from tool execution
              properties:
                success:
                  type: boolean
                filePath:
                  type: string
                files:
                  type: array
                  items:
                    type: string
                output:
                  type: string
                error:
                  type: string

    SessionStartEvent:
      allOf:
        - $ref: '#/components/schemas/BaseHookEvent'
        - type: object
          required:
            - source
          properties:
            source:
              type: string
              enum:
                - startup
                - resume
                - clear
                - compact
              description: How the session was started

    BaseHookEvent:
      type: object
      required:
        - session_id
        - transcript_path
        - cwd
        - hook_event_name
      properties:
        session_id:
          type: string
          description: Unique session identifier
        transcript_path:
          type: string
          description: Path to session transcript
        cwd:
          type: string
          description: Current working directory
        hook_event_name:
          type: string
          description: Type of hook event

    PreToolUseResponse:
      type: object
      properties:
        hookSpecificOutput:
          type: object
          required:
            - hookEventName
          properties:
            hookEventName:
              type: string
              const: PreToolUse
            permissionDecision:
              type: string
              enum:
                - allow
                - deny
                - ask
            permissionDecisionReason:
              type: string
        continue:
          type: boolean
          default: true
        suppressOutput:
          type: boolean
          default: false

    SessionStartResponse:
      type: object
      properties:
        hookSpecificOutput:
          type: object
          required:
            - hookEventName
          properties:
            hookEventName:
              type: string
              const: SessionStart
            additionalContext:
              type: string
              description: Context to inject into session

    EnvironmentVariables:
      type: object
      properties:
        CLAUDE_PROJECT_DIR:
          type: string
          description: Absolute path to project root
          example: "/Users/user/projects/myproject"
        CLAUDE_EVENT_TYPE:
          type: string
          description: Type of event being processed
          example: "PreToolUse"
        CLAUDE_PLUGIN_ROOT:
          type: string
          description: Plugin directory path (plugin hooks only)